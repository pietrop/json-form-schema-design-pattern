// https://webpack.js.org/contribute/writing-a-plugin/
// This plugin could also be extracted as storybook addon https://storybook.js.org/docs/react/addons/writing-addons  
const path = require("path");
const { validate } = require("schema-utils");
const isGlob = require('is-glob');
const glob = require("glob");
const jsDocToMdx = require("./jsdoc-to-mdx/jsdoc-to-mdx.js");
const schema = require("./schema.js")
const PLUGIN_NAME = "WepbackPluginJsDocToMdx";
const AUTOGENERATED_MDX_STORIES_POSTFIX = ".autogenerated.stories.mdx";

function generateMetaTitleForGlob({metaTitle, moduleName}){
  if(metaTitle.endsWith("/")){
    return  `${metaTitle}${moduleName}`;
  }else{
    return `${metaTitle}/${moduleName}`
  }
}

function generateOutpuFilePathForGlob({inputFilePath,moduleName}){
  const modulePathParsed = path.parse(inputFilePath);
  const moduleDir = modulePathParsed.dir;
 return path.join(moduleDir,`${moduleName}${AUTOGENERATED_MDX_STORIES_POSTFIX}`);
}

function getModuleName(inputFilePath){
  const modulePathParsed = path.parse(inputFilePath);
  let moduleName = modulePathParsed.name;
  if(moduleName ==="index"){
    const moduleDir = modulePathParsed.dir;
    // if the module name is `index.js` we want to use the folder name to have a unique name for the module.
    moduleName = moduleDir.split("/").pop()
  }
  return moduleName;
}
/**
 * 
 * @param {object} options
 * @param {string} options.metaTitle for glob option it's the storybook path without the title for the mdx file
 * @param {string} options.inputFilePath glob describing files to address
 */
function handleGlobOption({metaTitle, inputFilePath}){
  const globMatchedFiles = glob.sync(inputFilePath);
  globMatchedFiles.forEach((globInputFile)=>{
   const moduleName = getModuleName(globInputFile);
   const outpuFilePathForGlob = generateOutpuFilePathForGlob({inputFilePath: globInputFile,moduleName})
   jsDocToMdx({
      metaTitle: generateMetaTitleForGlob({metaTitle,moduleName}), 
      inputFilePath: globInputFile, 
      outpuFilePath: outpuFilePathForGlob
    });
  })
}

function generateMdxStories(files){
  // could also consider passing [`nonull` option ](https://github.com/isaacs/node-glob#usage) to glob
  // and remove branching logic if input is not a glob pattern.
  files.forEach(({metaTitle, inputFilePath, outpuFilePath})=>{
    if(isGlob(inputFilePath)){
      handleGlobOption({metaTitle, inputFilePath})
    }else{
      jsDocToMdx({metaTitle, inputFilePath, outpuFilePath});
    }
  })
}

function isFileListContainAutogeneratedFile(changedFiles){
  return changedFiles.find(element => element.endsWith(AUTOGENERATED_MDX_STORIES_POSTFIX));
}

function isAutoGenerateFileTriggeringBuild(modifiedFiles){
  const changedFiles = Array.from(modifiedFiles)
  const found = isFileListContainAutogeneratedFile(changedFiles);
  return !found;
}

class WepbackPluginJsDocToMdx {
  static defaultOptions = {
    metaTitle: `Uncategorized/${Math.random()}`,
  };
  constructor(options = {}) {
    validate(schema, options);
    this.options = { ...WepbackPluginJsDocToMdx.defaultOptions, ...options };

  }
  // Define `apply` as its prototype method which is supplied with compiler as its argument
  apply(compiler) {
    // Specify the event hook to attach to
    // https://stackoverflow.com/questions/36773619/webpack-execute-function-before-build-starts
    // At the moment, seems to only work if running on `initialize` or `enviroment` hooks. 
    compiler.hooks.initialize.tap(PLUGIN_NAME, () => {
      generateMdxStories(this.options.files);
    })

    // However it be good if it could also work on watch 
    // https://stackoverflow.com/questions/43140501/can-webpack-report-which-file-triggered-a-compilation-in-watch-mode
    compiler.hooks.watchRun.tap(PLUGIN_NAME, (comp) => {
      if (comp.modifiedFiles) {
        if(isAutoGenerateFileTriggeringBuild(comp.modifiedFiles)){
          generateMdxStories(this.options.files);
        }
      }
    });
  }
}

module.exports = WepbackPluginJsDocToMdx;
module.exports.AUTOGENERATED_MDX_STORIES_POSTFIX = AUTOGENERATED_MDX_STORIES_POSTFIX;
