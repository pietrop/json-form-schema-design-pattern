const path = require('path');
const fs = require('fs');
const jsdoc2md = require('jsdoc-to-markdown');
const {AUTOGENERATED_MDX_STORIES_POSTFIX} = require("../index.js");
const SCRIPT_LOCAL_BASE_PATH = ".storybook/webpack-plugin-jsdoc-to-mdx";
const AUTOGENERATED_NOTICE_TEXT = "<!-- NOTE: This file is auto generated, see scripts for more details. Do not modify this file directly as it will be overitten. -->"
const USER_FACING_AUTOGENERATED_NOTICE_TEXT = "_⚠️This doc is an autogenerated doc via a custom \`webpack-plugin-jsdoc-to-mdx\` (that uses [jsdoc](https://jsdoc.app) and [jsdoc-to-markdown](https://www.npmjs.com/package/jsdoc-to-markdown))⚠️_";

function readFileToString(filePath){
    return  fs.readFileSync(path.join(process.cwd(),filePath)).toString()
}

const MAIN_TEMPLATE =  readFileToString(`${SCRIPT_LOCAL_BASE_PATH}/jsdoc-to-mdx/template-mdx.hbs`)
const PARTIAL_TEMPLATE = readFileToString(`${SCRIPT_LOCAL_BASE_PATH}/jsdoc-to-mdx/header.hbs`)


function mdxTemplate({metaTitle, content, inputFilePath}){ 
    return`${AUTOGENERATED_NOTICE_TEXT}\n
import { Meta } from "@storybook/addon-docs";

<Meta title="${metaTitle}" />

${USER_FACING_AUTOGENERATED_NOTICE_TEXT}\n
_Source file can be founnd at \`${inputFilePath}\`_

---

${content}

`
}

/**
 * 
 * @see [jsdoc-to-markdown/API.md at master · jsdoc2md/jsdoc-to-markdown](https://github.com/jsdoc2md/jsdoc-to-markdown/blob/master/docs/API.md#jsdoctomarkdown-)
 * @example <caption>CLI version of this module</caption>
 * npx jsdoc2md  ./stories/Example/index.js --template template-mdx.hbs --partial header.hbs --module-index-format='none' --global-index-format='none' --param-list-format='table' --property-list-format='list' > ./stories/Example/Example.stories.mdx
 */
async function jsDocToMdx ({metaTitle, inputFilePath, outpuFilePath}){
   
   const content = await jsdoc2md.render({ 
       "files": path.join(process.cwd(),inputFilePath),
       "template": MAIN_TEMPLATE, 
       "partial": PARTIAL_TEMPLATE, 
    //    "module-index-format": "none",
    //    "global-index-format": "none",
       "param-list-format":"table",
       "property-list-format":"table",
       "member-index-format": "grouped",
    });

   fs.writeFileSync(path.join(process.cwd(),outpuFilePath), mdxTemplate({
        metaTitle, 
        content,
        inputFilePath,
   }))
}




module.exports = jsDocToMdx;
